Наследование в dart

Дочерний класс получает все методы и свойства своего супер класса. 

Наследование является одним из фундаментальных атрибутов объектно-ориентированного программирования. Оно позволяет определить дочерний класс, который использует (наследует), расширяет или изменяет возможности родительского класса. Класс, члены которого наследуются, называется базовым классом.

Класс, члены которого наследуются, называется базовым классом. Класс, который наследует члены базового класса, называется производным классом.

Dart поддерживают только одиночное наследование. Это означает, что каждый класс может наследовать члены только одного класса. Но зато поддерживается транзитивное наследование, которое позволяет определить иерархию наследования для набора типов. Другими словами, тип "Camry" может наследовать возможности типа "Toyota", который в свою очередь наследует от типа "Car", который наследует от базового класса "Manufacture". Благодаря транзитивности наследования члены типа "Manufacture" будут доступны для типа "Camry".

В языке Dart наследование реализуется с помощью ключевого слова extends.

https://flutter.su/docs/dart-basics/class-objects-2

Производные классы не наследуют конструкторы от родительских классов. Производный класс, у которого не объявлены конструкторы имеет только один стандартный конструктор.

Чтобы воспользоваться конструктором супер класса, мы должны написать свой конструктрок для подкласса, и с помощью ключевого слова super сослаться на конструктор суперкласса. 
