// List - упорядочный набор объектов. Создается через перечисление объектов.

// Бывает: 

// * фиксированными (с жестком определенным размером);
// * нефиксированными (могут увеличиваться в размерах).

void main() {
  var list1 = [1, 2, 3]; // список содержит 3 элементов, числа. Var сам определяет тип списка.
  List<int> list2 = [1, 2, 3] // явно указываем тип списка (содержит только целочисленные значения, если ввести строку, то будет ошибка)

  var list3 = List<String>(); // список, который может содержать только строки

  var list4 = [1, 'test', true]; // список состоит из трех элементов, комплиятор сам их определит 

  var list5 = [ // пример списка, который содержит внутренние списки
    [1, 2, 3],
    ['test'],
    [true, false]
  ];
}

// Список фиксированной длины
void main() {
  List<int> numberList = List(5); // список содержит только числа
  numberList[0] = 22;
  numberList[1] = 42;
  numberList[2] = 18;
  numberList[3] = 22;
  numberList[4] = 90;
  // для обращения к элементам списка используются индексы. Нумерация начинается с цифры 0, как первый элемент в списке.

  // Обновление значения у элемента в списке:
  numberList[0] = 25;
  // Удаление значения у элемента в списке:
  numberList[1] = null;

  for (int i = 0; i < numberList.lenght; i++) { // вывод всех элементов в примере.
    print(numberList[i])
  }

  for (int element in numberList) { // еще один способ вывода (обхода) всех элементов: для каждого элемента списка выполнить
    print(element);
  }

  numberList.forEach(element) => print(element); // метод forEach, принимает анонимную функцию и возвращает ее
}

// Растущий список, это когда мы создаем пустой список и через команду .add добавляем в него значения. например: 

List numberList = List();
numberList.add(22); // добавлен новый элемент, под индексом 0 (первый) со значением 22.

// обновлять переменные можем также, как и в фиксированном, т.е.: 
numberList[0] = 25;

// удаление элемента осуществляется через remove по значению
numberList.remove(33); // удаляет значение (индекс тоже удаляет из списка)

// удаление элемента по индексу
numberList.removeAt(1) // указываем, какой индекс нужно удалить

// удаление содержимого всего списка
numberList.clear();

// Обход расширяемого списка происходит также, как и фиксированного.


// возврат первого элемента из списка
numberList.first;

// последний элемент из списка
numberList.last;

// вывод длины списка (кол-во элементов в списке)
numberList.lenght;

// узнать, пустой ли список (вернет true, если пустой, или false, если не пустой)
numberList.isEmpty;

// возвраст списка в обратном порядке
numberList.reversed;