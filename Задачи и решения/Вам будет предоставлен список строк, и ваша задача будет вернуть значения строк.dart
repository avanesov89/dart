// Вам дана строка «abc» и предполагая, что каждая буква в строке имеет значение, равное ее позиции в алфавите, то наша строка будет иметь значение 1 + 2 + 3 = 6. Это означает, что: a = 1, b = 2, c = 3 .... z = 26.

// Вам будет предоставлен список строк, и ваша задача будет вернуть значения строк, умноженные на позицию этой строки в списке. Позиция начинается с 1.

// Например: wordValue ["abc", "abc abc"] должно вернуть [6, 24] или [6 * 1, 12 * 2]. Обратите внимание, что пробелы игнорируются. «abc» имеет значение 6, а «abc abc» - значение 12. Теперь значение в позиции 1 умножается на 1, а значение в позиции 2 умножается на 2. Ввод будет содержать только строчные буквы и пробелы.

// Входные данные: Дан список строк - ["dart", "abc", "good luck"]
// Выходные данные: Вы должны получить список со значениями – [43, 12, 264]

void main() {
  int totalWord(String selectWord) {
    // создаем функцию. в данном случае int указывает не на тип переменной, а на тип значения которое должна возвращать эта функция, в return должен быть int иначе говоря (целочисленное значение)
    String alphabet = 'abcdefghijklmnopqrstuvwxyz'; // добавляем алфавит
    int numberStart =
        0; // это сумма порядковых номеров букв, если мы ее инициализируешь со значением 1, сумма будет больше на единицу. Мы пишем numberStart = 0 чтобы инициализировать переменную, чтобы компилятор точно знал что она не null и не может принимать значение null.
    for (var i = 0; i < selectWord.length; i++) {
      // создаем цикл for, присвоим переменной i значение 0, выполняем цикл, если выражение i<word.length истино, т.е. даже если будет 1 буква, то истина и если условие истино, то мы переменную i увеличиваем на единицу.
      numberStart += alphabet.indexOf(selectWord[i]) +
          1; // += сложение присваивание, Символы в строке идут слева направо. Индекс первого символа равен 0, а последнего символа в строке stringName равен stringName.length - 1 (indexOf). т.е. у нас есть алфавит, буква a в нем = 0, буква z = длины всего алфавита -1, т.е. 25 (т.к. всего 26 букв). 0 складываем с индексом нашей буквы из ранее созданного цикла, где мы проверяем каждую букву в word , и плюсуем к ней 1
    }
    return numberStart;
  }

  List<String> allWords = [
    "dart",
    "abc",
    "good luck"
  ]; // создаем список (List) со строковыми значениями, называем его allWords и присваиваем ему три значения через запятую, фиксированный список
  // List<int> results = List.generate(); // создаем еще один список int, подразумеваем, что в нем будут храниться целочисленные значения, которые мы дальше посчитаем. поэтому список пока пустой
  var results = <int>[];
  int counter =
      1; // создаем счетчик для дальнейшего умножения, по условиям задачи нам нужно будет каждый набор слов умножать (первый набор на 1, второй на 2, третий на 3)
  for (String selectWord in allWords) {
    // используем цикл for для перебора элементов, объекты мы берем из ранее созданного списка allWords
    results.add(totalWord(selectWord) *
        counter); // results - ранее созданная переменная. results.add = добавляет в список значения
    counter++; // увеличиваем счетчик на 1
  }
  print(results);
}

// for(String selectWord in allWords) - Мы заходим в цикл, у нас есть переменная selectWord. первый проход в цикле этой переменной присваивается значение первого элемента. итого selectWord = 'dart'. Дальше когда мы выполнили блок кода и перешли ко второму элементу теперь переменной selectWord будет присвоено значение 'abc'. selectWord это переменная в которой содержится текущее значение
